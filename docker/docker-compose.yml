#docker-compose版本
version: '3.7'

#创建一个网络
networks:
  dev-network:
    name: dev-network
    ipam:
      driver: default
      config:
        - subnet: 172.28.0.0/16

#定义各种服务
services:
  redis:
    container_name: dev-redis
    image: 'redis:5.0.2'
    networks:
      dev-network:
        ipv4_address: 172.28.0.2
    command: ["redis-server","/data/redis.conf"]
    volumes:
      - /home/anthony/dockerVolume/dev/redis:/data

  consul:
    container_name: dev-consul
    #    image: 'consul:1.3.1'
    image: 'consul:1.4.0'
    networks:
      dev-network:
        ipv4_address: 172.28.0.3
    command: ["consul", "agent", "-server", "-bootstrap-expect", "1", "-data-dir", "/consul/data", "-client", "0.0.0.0", "-bind", "172.28.0.3", "-ui"]
    #    command: ["consul", "agent", "-server", "-bootstrap-expect", "1", "-data-dir", "/consul/data", "-bind", "172.28.0.3", "-ui"]
    volumes:
      - /home/anthony/dockerVolume/dev/consul:/consul/data

  mysql:
    container_name: dev-mysql
    image: 'mysql:8.0.13'
    networks:
      dev-network:
        ipv4_address: 172.28.0.4
    environment:
      - MYSQL_ROOT_PASSWORD=123456
    volumes:
      - /home/anthony/dockerVolume/dev/mysql:/var/lib/mysql

  mongo:
    container_name: dev-mongo
    image: 'mongo:4.0.5'
    networks:
      dev-network:
        ipv4_address: 172.28.0.5
    #    command: ['']
    volumes:
      - /home/anthony/dockerVolume/dev/mongo/db:/data/db
      - /home/anthony/dockerVolume/dev/mongo/configdb:/data/configdb

  rabbitmq:
    container_name: dev-rabbitmq
    image: 'rabbitmq:3.7.8-management'
    networks:
      dev-network:
        ipv4_address: 172.28.0.6
    #    command: ['']
    volumes:
      - /home/anthony/dockerVolume/dev/rabbitmq:/var/lib/rabbitmq

  service-cipher:
    depends_on:
      - redis
      - consul
      - mysql
    container_name: service-cipher
    image: 'cd871127/service-cipher:0.0.1'
    networks:
      dev-network:
        ipv4_address: 172.28.0.7
    volumes:
      - /home/anthony/dockerVolume/dev/app/service-cipher/config:/app/config
      - /home/anthony/dockerVolume/dev/app/service-cipher/logs:/app/logs