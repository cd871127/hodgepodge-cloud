group 'io.github.cd871127'
version '0.0.1'

buildscript {
    repositories {
        maven {
            url aliyunMevenRepo
        }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

//需要redis服务名
String[] redisProjects = ['service-safe-box', 'service-auth', 'service-cipher']
String[] consulProjects = ['service-safe-box', 'service-auth',
                           'service-cipher', 'service-test',
                           'service-gateway']
//需要mysql服务名
String[] mysqlProjects = ['service-safe-box', 'service-auth', 'service-cipher']
String[] webProjects = ['service-cipher','service-auth']
String[] testProjects = ['service-test']

//所有子项目配置
allprojects {
    apply plugin: 'java'
    apply plugin: 'idea'
    sourceCompatibility = 1.8

    repositories {
        maven {
            url aliyunMevenRepo
        }
    }

    [compileJava, compileTestJava, javadoc]*.options*.encoding = 'UTF-8'

    dependencies {
        implementation group: 'com.alibaba', name: 'fastjson', version: fastjsonVersion
        annotationProcessor group: 'org.projectlombok', name: 'lombok', version: lombokVersion
        compile group: 'org.projectlombok', name: 'lombok', version: lombokVersion
        testCompile group: 'junit', name: 'junit', version: junitVersion
    }
}

//所有服务配置
configure(subprojects.findAll { it.name.startsWith('service-') }) {
    apply plugin: 'org.springframework.boot'
    apply plugin: "io.spring.dependency-management"

    dependencyManagement {
        imports {
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
        }
    }

//    configurations {
//        compile.exclude group: 'org.springframework.boot', module: 'spring-boot-starter-tomcat'
//    }

    dependencies {
        compile project(":lib-core")
        compile group: 'org.springframework.boot', name: 'spring-boot-devtools'

        compile group: 'org.springframework.boot', name: 'spring-boot-starter-actuator'

        compile group: 'org.springframework.boot', name: 'spring-boot-starter-logging'
//        compile group: 'org.springframework.boot', name: 'spring-boot-starter-undertow'
        compile('org.springframework.cloud:spring-cloud-starter-openfeign')
        annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"
    }

    bootJar {
        rootSpec.exclude("**/config/*.properties", "**/config/*.yml")
    }
}

configure(subprojects.findAll { redisProjects.contains(it.name) }) {
    dependencies {
        compile group: 'org.springframework.boot', name: 'spring-boot-starter-data-redis'
        compile group: 'org.springframework.session', name: 'spring-session-data-redis'
        compile project(":hodgepodge-spring-boot-starter")
    }
}

configure(subprojects.findAll { mysqlProjects.contains(it.name) }) {
    dependencies {
        compile group: 'org.mybatis.spring.boot', name: 'mybatis-spring-boot-starter', version: mybatisVersion
        compile group: 'mysql', name: 'mysql-connector-java', version: mysqlVersion
        compile group: 'com.github.pagehelper', name: 'pagehelper-spring-boot-starter', version: pageHelperVersion
    }
}

configure(subprojects.findAll { consulProjects.contains(it.name) }) {
    dependencies {
//        compile group: 'org.springframework.cloud', name: 'spring-cloud-starter-consul-all'
        compile group: 'org.springframework.cloud', name: 'spring-cloud-starter-consul-discovery'
//        compile group: 'org.springframework.cloud', name: 'spring-cloud-starter-config'
        compile group: 'org.springframework.cloud', name: 'spring-cloud-starter-consul-config'
    }
}


configure(subprojects.findAll { testProjects.contains(it.name) }) {
    dependencies {
//        compile project(":hodgepodge-spring-boot-starter")
    }
}

configure(subprojects.findAll { webProjects.contains(it.name) }) {
    dependencies {
        compile group: 'org.springframework.boot', name: 'spring-boot-starter-web'
    }
}

//task ttt{
//    println(subprojects.size())
//}

//compile group: 'org.springframework.boot', name: 'spring-boot-starter-web'



